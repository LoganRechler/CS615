Before class:
---------------------
Advanced Programming in the UNIX Environment (APUE), Stevens Chapters 1 (Unix System Overview):
  1.2:
    kernel is software the controls the hardware resources
    system calls are the interface to the kernel
  1.3:
    passwords are typically stored in /etc/passwd
    composed of 7 colon separated fields
      login name, encrypted password, numeric user ID, numeric group ID, comment field, home directory, shell program
    many different versions of shells
      Bourne shell (/bin/sh), /bin/bash, /bin/csh (C shell), /bin/ksh (Korn shell), /bin/tcsh (TENEX C shell)
  1.4:
    stat/fstat return a structure that contains the attributes of a file
    / and null char cannot be in filenames
  1.5:
    A program is an executable file
      executed by the kernel after being read into memory
    The executing instance of a program is a process
  1.6:
    All threads within a process share its address space, file descriptors, stacks, etc
      The threads execute on its own stack but can access another thread's stack
        Requires memory synchronization
  1.7:
    Errors are divided into fatal and non-fatal
  1.10:
    Process time (CPU time) is measured in clock ticks
    clock_t holds the time values

APUE, Stevens Chapter 2:
  There are lots of different standards being applied, most of them make our life easier
    Allows us to know the limits of the environment (compile-time limits and runtime limits)
      Limits seem unimportant a lot of the time but can be super important (overflowing)
  POSIX.1 standards defer to ISO C standards when conflicts between them arise

Unix history and basic features:
  Unix timekeeping is the number of seconds since midnight UTC January 1, 1970 (POSIX time)
  Unix was rewritten in C
  Unix included networking capabilities prior to the Internet
    You could email
  Since they (the Internet and Unix) were growing in parallel most of the infrastructure of the Internet runs on Unix systems
  Unix has a very high standard for documentation (man pages)
    Target audience is engineers
    Used the roff text formatting program
  Unix follows the principle of least privilege
  Unix follows the philosophy that everything should be kept simple (KISS)

General Thoughts:
I like that the textbook actually runs their code and shows us an example output. This is very helpful when something isn't working right when I recreate the code on my machine.

I really like all of the examples code snippets provided. Makes the textbook feel less dry.

Open Questions:
Where can I find the "apue.h" file so I can run the code myself?

Unix was rewritten in C: what was it originally written in?

The "Unix history and basic features" says that roff is still used for man pages today. Where can I find this? A quick Google search came up with nothing and it seems like an interesting program.
